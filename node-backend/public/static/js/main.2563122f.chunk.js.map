{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","shared/Hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","onPress","document","getElementById","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","children","MainHeader","NavLinks","auth","useContext","to","exact","MainNavigation","logoutTimer","useState","drawerIsOpen","setDraweIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlaces","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","tokenExpireDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainedTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.2563122f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onPress}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nfunction SideDrawer(props) {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nfunction MainHeader(props) {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nfunction NavLinks(props) {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}> My Places</NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\"> Add Place</NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\"> Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          {\" \"}\r\n          <button onClick={auth.logout}> LOG OUT </button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavLinks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport \"./MainNavigation.css\";\r\n\r\nfunction MainNavigation(props) {\r\n  const [drawerIsOpen, setDraweIsOpen] = useState(false);\r\n\r\n  function openDrawerHandler() {\r\n    setDraweIsOpen(true);\r\n  }\r\n\r\n  function closeDrawerHandler() {\r\n    setDraweIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onPress={closeDrawerHandler} />}\r\n\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__draer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpireDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpireDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpireDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if ((token, tokenExpirationDate)) {\r\n      const remainedTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainedTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./users/pages/Users\";\n// import NewPlaces from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./users/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/Hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlaces = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n\n        <Route path=\"/places/new\" exact>\n          <NewPlaces />\n        </Route>\n\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}